{"version":3,"sources":["../../src/repository/SessionTypeRepository.js"],"names":["repository","readSessionType","req","session_type_list","sql","clt","query","result","rowCount","rows","forEach","row","push","SessionType","id_session_type","name","description","console","log"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;;;AAEA,IAAMA,aAAa,EAAnB;;AAGAA,WAAWC,eAAX;AAAA,uEAA6B,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,yCADqB,GACD,EADC;AAErBC,2BAFqB;AAAA;AAAA;AAAA,+BAOFC,mBAAIC,KAAJ,CAAUF,GAAV,CAPE;;AAAA;AAOjBG,8BAPiB;;AAQrB,4BAAIA,OAAOC,QAAP,GAAkB,CAAtB,EAAyB;AACrBD,mCAAOE,IAAP,CAAYC,OAAZ,CAAoB,UAACC,GAAD,EAAS;AACzBR,kDAAkBS,IAAlB,CAAuB,IAAIC,qBAAJ,CAAgBF,IAAIG,eAApB,EAAqCH,IAAII,IAAzC,EAA+CJ,IAAIK,WAAnD,CAAvB;AACH,6BAFD;AAGH;AACDC,gCAAQC,GAAR,CAAYf,iBAAZ;AAbqB,yDAcdA,iBAdc;;AAAA;AAAA;AAAA;;AAgBrBc,gCAAQC,GAAR;;AAhBqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA7B;;AAAA;AAAA;AAAA;AAAA;;kBAsBelB,U","file":"SessionTypeRepository.js","sourcesContent":["import SessionType from \"../Models/SessionType\"\r\nimport clt from \"../core/config/database\";\r\n\r\nconst repository = {};\r\n\r\n\r\nrepository.readSessionType = async (req) => {\r\n    let session_type_list = []\r\n    let sql = `\r\n        SELECT id_session_type, name, description\r\n        FROM _session_type\r\n    `;\r\n    try {\r\n        var result = await clt.query(sql);\r\n        if (result.rowCount > 0) {\r\n            result.rows.forEach((row) => {\r\n                session_type_list.push(new SessionType(row.id_session_type, row.name, row.description));\r\n            });\r\n        }\r\n        console.log(session_type_list);\r\n        return session_type_list;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default repository;"]}