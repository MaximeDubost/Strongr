{"version":3,"sources":["../../src/repository/EquipmentRepository.js"],"names":["repository","getEquipmentByID","req","sql","clt","query","params","id_equipment","result","rows","console","log"],"mappings":";;;;;;AAAA;;;;;;;;AAEA,IAAMA,aAAa,EAAnB;AACAA,WAAWC,gBAAX;AAAA,uEAA8B,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBC,2BADsB;AAAA;AAAA;AAAA,+BAOHC,mBAAIC,KAAJ,CAAUF,GAAV,EAAe,CAACD,IAAII,MAAJ,CAAWC,YAAZ,CAAf,CAPG;;AAAA;AAOlBC,8BAPkB;AAAA,yDAQfA,OAAOC,IARQ;;AAAA;AAAA;AAAA;;AAUtBC,gCAAQC,GAAR;AAVsB,yDAWf,GAXe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA9B;;AAAA;AAAA;AAAA;AAAA;kBAceX,U","file":"EquipmentRepository.js","sourcesContent":["import clt from \"../core/config/database\";\r\n\r\nconst repository = {};\r\nrepository.getEquipmentByID = async (req) => {\r\n    let sql = `\r\n    SELECT id_equipment as id, name, description, image\r\n    FROM _equipment \r\n    WHERE id_equipment = $1    \r\n    `;\r\n    try {\r\n        let result = await clt.query(sql, [req.params.id_equipment]);\r\n        return result.rows;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return 500;\r\n    }\r\n}\r\nexport default repository;"]}