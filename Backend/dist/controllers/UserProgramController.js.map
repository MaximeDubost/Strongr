{"version":3,"sources":["../../src/controllers/UserProgramController.js"],"names":["controller","createUserProgram","req","res","UserProgramRepository","status","sendStatus","getProgramsPreview","result","json","updateUserProgram","deleteUserProgram"],"mappings":";;;;;;AAAA;;;;;;;;AAEA,IAAMA,aAAa,EAAnB;;AAEAA,WAAWC,iBAAX;AAAA,uEAA+B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACRC,gCAAsBH,iBAAtB,CAAwCC,GAAxC,CADQ;;AAAA;AACvBG,8BADuB;;AAE3BF,4BAAIG,UAAJ,CAAeD,MAAf;;AAF2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA/B;;AAAA;AAAA;AAAA;AAAA;;AAKAL,WAAWO,kBAAX;AAAA,wEAAgC,kBAAOL,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACTC,gCAAsBG,kBAAtB,CAAyCL,GAAzC,CADS;;AAAA;AACxBM,8BADwB;;AAE5B,4BAAIA,UAAU,GAAd,EAAmB;AACfL,gCAAIE,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqBD,MAArB;AACH,yBAFD,MAEO;AACHL,gCAAIG,UAAJ,CAAeE,MAAf;AACH;;AAN2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhC;;AAAA;AAAA;AAAA;AAAA;;AASAR,WAAWU,iBAAX;AAAA,wEAA+B,kBAAOR,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACRC,gCAAsBM,iBAAtB,CAAwCR,GAAxC,CADQ;;AAAA;AACvBG,8BADuB;;AAE3BF,4BAAIG,UAAJ,CAAeD,MAAf;;AAF2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA/B;;AAAA;AAAA;AAAA;AAAA;;AAKAL,WAAWW,iBAAX;AAAA,wEAA+B,kBAAOT,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACRC,gCAAsBO,iBAAtB,CAAwCT,GAAxC,CADQ;;AAAA;AACvBG,8BADuB;;AAE3BF,4BAAIG,UAAJ,CAAeD,MAAf;;AAF2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA/B;;AAAA;AAAA;AAAA;AAAA;;kBAKeL,U","file":"UserProgramController.js","sourcesContent":["import UserProgramRepository from \"../repository/UserProgramRepository\"\r\n\r\nconst controller = {};\r\n\r\ncontroller.createUserProgram = async (req, res) => {\r\n    let status = await UserProgramRepository.createUserProgram(req);\r\n    res.sendStatus(status)\r\n}\r\n\r\ncontroller.getProgramsPreview = async (req, res) => {\r\n    let result = await UserProgramRepository.getProgramsPreview(req);\r\n    if (result != 500) {\r\n        res.status(200).json(result)\r\n    } else {\r\n        res.sendStatus(result)\r\n    }\r\n}\r\n\r\ncontroller.updateUserProgram = async (req, res) => {\r\n    let status = await UserProgramRepository.updateUserProgram(req);\r\n    res.sendStatus(status)\r\n}\r\n\r\ncontroller.deleteUserProgram = async (req, res) => {\r\n    let status = await UserProgramRepository.deleteUserProgram(req);\r\n    res.sendStatus(status)\r\n}\r\n\r\nexport default controller;"]}