{"version":3,"sources":["../../src/controllers/ExerciseController.js"],"names":["controller","createExercise","req","res","ExerciseRepository","status","sendStatus","readExercises","rows","json","detailExercise","updateExercise","deleteExercise","testInsertForDeleteExercise","deleteForTest","deleteExerciseAll"],"mappings":"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","file":"ExerciseController.js","sourcesContent":["import ExerciseRepository from \"../repository/ExerciseRepository\";\r\n\r\nconst controller = {};\r\n\r\n/**\r\n * create exercise\r\n *\r\n * @param id_app_exercise\r\n * @param id_user\r\n * @param name\r\n * @param id_equipment\r\n */\r\ncontroller.createExercise = async (req, res) => {\r\n  let status = await ExerciseRepository.createExercise(req);\r\n  res.sendStatus(status);\r\n};\r\n\r\n/**\r\n * read all exercises\r\n */\r\ncontroller.readExercises = async (req, res) => {\r\n  let rows = await ExerciseRepository.readExercises(req);\r\n  res.status(200).json(rows);\r\n};\r\n\r\ncontroller.detailExercise = async (req, res) => {\r\n  let rows = await ExerciseRepository.detailExercise(req);\r\n  res.status(200).json(rows);\r\n};\r\n\r\n/**\r\n * update user exercise\r\n */\r\ncontroller.updateExercise = async (req, res) => {\r\n  let rows = await ExerciseRepository.updateExercise(req);\r\n  res.status(200).json(rows);\r\n};\r\n\r\n/**\r\n * delete user exercise\r\n */\r\ncontroller.deleteExercise = async (req, res) => {\r\n  let rows = await ExerciseRepository.deleteExercise(req);\r\n  res.status(200).json(rows);\r\n};\r\n\r\ncontroller.testInsertForDeleteExercise = async (req, res) => {\r\n  let rows = await ExerciseRepository.testInsertForDeleteExercise(req);\r\n  res.status(200).json(rows);\r\n};\r\n\r\ncontroller.deleteForTest = async (req, res) => {\r\n  let rows = await ExerciseRepository.deleteForTest(req);\r\n  res.status(200).json(rows);\r\n};\r\n\r\ncontroller.deleteExerciseAll = async (req, res) => {\r\n  let rows = await ExerciseRepository.deleteExerciseAll(req);\r\n  res.status(200).json(rows);\r\n};\r\n\r\nexport default controller;\r\n"]}