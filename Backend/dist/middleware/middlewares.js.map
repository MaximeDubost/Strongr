{"version":3,"sources":["../../src/middleware/middlewares.js"],"names":["middleware","checkAuth","req","res","next","authHeader","headers","token","split","sendStatus","jwt","verify","err","user","console","log"],"mappings":";;;;;;AAAA;;;;;;AACA,IAAMA,aAAa,EAAnB;;AAEAA,WAAWC,SAAX,GAAuB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvC,QAAMC,aAAaH,IAAII,OAAJ,CAAY,eAAZ,CAAnB;AACA,QAAMC,QAAQF,cAAcA,WAAWG,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAA5B;;AAEA,QAAID,SAAS,IAAb,EAAmB,OAAOJ,IAAIM,UAAJ,CAAe,GAAf,CAAP;;AAEnBC,2BAAIC,MAAJ,CAAWJ,KAAX,EAAkB,QAAlB,EAA4B,UAACK,GAAD,EAAMC,IAAN,EAAe;AACvCC,gBAAQC,GAAR,CAAYH,GAAZ;AACA,YAAIA,GAAJ,EAAS,OAAOT,IAAIM,UAAJ,CAAe,GAAf,CAAP;AACTP,YAAIW,IAAJ,GAAWA,IAAX;AACAT;AACH,KALD;AAMH,CAZD;;kBAceJ,U","file":"middlewares.js","sourcesContent":["import jwt from \"jsonwebtoken\";\r\nconst middleware = {};\r\n\r\nmiddleware.checkAuth = (req, res, next) => {\r\n    const authHeader = req.headers['authorization']\r\n    const token = authHeader && authHeader.split(' ')[1];\r\n\r\n    if (token == null) return res.sendStatus(401)\r\n\r\n    jwt.verify(token, \"SECRET\", (err, user) => {\r\n        console.log(err)\r\n        if (err) return res.sendStatus(403)\r\n        req.user = user\r\n        next()\r\n    })\r\n}\r\n\r\nexport default middleware"]}